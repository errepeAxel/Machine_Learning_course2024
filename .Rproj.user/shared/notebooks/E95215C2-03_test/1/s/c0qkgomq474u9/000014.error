{"frames":[{"func":"tune_bayes(ames_wflow, resamples = rs_splits, param_info = ames_set, \n    initial = ames_grid_search, iter = 15)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_bayes.workflow(ames_wflow, resamples = rs_splits, param_info = ames_set, \n    initial = ames_grid_search, iter = 15)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_bayes_workflow(object, resamples = resamples, iter = iter, \n    param_info = param_info, metrics = metrics, objective = objective, \n    initial = initial, control = control, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"evalq({\n    on.exit({\n        cli::cli_alert_danger(\"Optimization stopped prematurely; returning current results.\")\n        out <- new_iteration_results(x = unsummarized, parameters = param_info,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"evalq({\n    on.exit({\n        cli::cli_alert_danger(\"Optimization stopped prematurely; returning current results.\")\n        out <- new_iteration_results(x = unsummarized, parameters = param_info,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"more_results(object, resamples = resamples, candidates = candidates, \n    metrics = metrics, control = control, param_info = param_info)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(tune_grid(object, resamples = resamples, param_info = param_info, \n    grid = candidates, metrics = metrics, control = control), \n    silent = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_grid(object, resamples = resamples, param_info = param_info, \n    grid = candidates, metrics = metrics, control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_grid.workflow(object, resamples = resamples, param_info = param_info, \n    grid = candidates, metrics = metrics, control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_grid_workflow(object, resamples = resamples, grid = grid, \n    metrics = metrics, pset = param_info, control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_grid_loop(resamples = resamples, grid = grid, workflow = workflow, \n    metrics = metrics, control = control, rng = rng)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn_tune_grid_loop(resamples, grid, workflow, metrics, control, \n    rng)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tune_grid_loop_impl(fn_tune_grid_loop_iter = fn_tune_grid_loop_iter, \n    resamples = resamples, grid = grid, workflow = workflow, \n    metrics = metrics, control = control, rng = rng, parallel_over = parallel_over)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressPackageStartupMessages(results <- foreach::foreach(split = splits, \n    seed = seeds, .packages = packages, .errorhandling = \"pass\") %op% \n    {\n        fn_tune_grid_loop_iter_safely(fn_tune_grid_loop_iter = fn_tune_grid_loop_iter,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"foreach::foreach(split = splits, seed = seeds, .packages = packages, \n    .errorhandling = \"pass\") %op% {\n    fn_tune_grid_loop_iter_safely(fn_tune_grid_loop_iter = fn_tune_grid_loop_iter, \n        split = split, grid_info = grid_info, workflow = workflow,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    repeat {\n        args <- nextElem(it)\n        if (obj$verbose) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(eval(xpr, envir = envir), error = function(e) e)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn_tune_grid_loop_iter_safely(fn_tune_grid_loop_iter = fn_tune_grid_loop_iter, \n    split = split, grid_info = grid_info, workflow = workflow, \n    metrics = metrics, control = control, seed = seed, metrics_info = metrics_info, \n    params = params)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn_tune_grid_loop_iter_wrapper(split, grid_info, workflow, metrics, \n    control, seed, metrics_info = metrics_info, params)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr = tryCatch(expr = list(result = fn(...), \n    error = NULL, warnings = warnings), error = handle_error), \n    warning = handle_warning)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr = list(result = fn(...), error = NULL, warnings = warnings), \n    error = handle_error)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".catch_and_log_fit(.expr = .fit_model(workflow, control_workflow), \n    control, split, iter_msg_model, notes = out_notes)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"catcher(.expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(withCallingHandlers(warning = add_cond, expr), silent = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(warning = add_cond, expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".fit_model(workflow, control_workflow)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fit(action_model, workflow = workflow, control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fit.action_model(action_model, workflow = workflow, control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fit_from_xy(spec, mold, case_weights, control_parsnip)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fit_xy(spec, x = mold$predictors, y = mold$outcomes, case_weights = case_weights, \n    control = control_parsnip)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fit_xy.model_spec(spec, x = mold$predictors, y = mold$outcomes, \n    case_weights = case_weights, control = control_parsnip)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"xy_form(object = object, env = eval_env, control = control, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"form_form(object = object, env = env, control = control, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_mod(fit_call, capture = control$verbosity == 0, catch = control$catch, \n    envir = env, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"capture.output(res <- try(eval_tidy(e, env = envir, ...), silent = TRUE))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(...elt(i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(eval_tidy(e, env = envir, ...), silent = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_tidy(e, env = envir, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(49L, \n    data, 5), kernel = ~\"rectangular\", distance = ~0.108765259950035)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"matrix(dmtmp$cl, nrow = p, ncol = kmax + 2)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in attachNamespace(.x) : namespace is already attached\n"}